module ImmGen (
    input  logic [31:0] instruction,
    output logic [31:0] imm_out
);
    logic [6:0] opcode;
    assign opcode = instruction[6:0];

    always_comb begin
        case (opcode)
            7'b0010011, // I-type arithmetic
            7'b0000011: // I-type load
                imm_out = {{20{instruction[31]}}, instruction[31:20]}; // sign-extend imm[11:0]

            7'b0100011: // S-type (store)
                imm_out = {{20{instruction[31]}}, instruction[31:25], instruction[11:7]};

            7'b1100011: // B-type (branch)
                imm_out = {{19{instruction[31]}}, instruction[31], instruction[7],
                            instruction[30:25], instruction[11:8], 1'b0};

            default:
                imm_out = 32'b0;
        endcase
    end
endmodule
